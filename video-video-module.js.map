{"version":3,"sources":["./projects/nanshan-webrtc/src/app/video/video.component.ts","./projects/nanshan-webrtc/src/app/video/video.component.html","./projects/nanshan-webrtc/src/app/video/video.module.ts","./projects/nanshan-webrtc/src/app/video/video-routing.module.ts","./projects/nanshan-webrtc/src/app/core/services/s3bucket.service.ts","./projects/webrtc-lib/src/lib/enums/recorder-state.enum.ts","./projects/nanshan-webrtc/src/app/shared/pipes/identity.pipe.ts","./projects/nanshan-webrtc/src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"video-video-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Identity } from 'projects/webrtc-lib/src/lib/enums/identity.enum';\nimport { RecorderState } from 'projects/webrtc-lib/src/lib/enums/recorder-state.enum';\nimport { RecordService } from 'projects/webrtc-lib/src/lib/record/record.service';\nimport { ScreenshotService, WebrtcLibService } from 'projects/webrtc-lib/src/public-api';\nimport { S3bucketService } from '../core/services/s3bucket.service';\n\n@Component({\n  selector: 'app-video',\n  templateUrl: './video.component.html',\n  styleUrls: ['./video.component.scss']\n})\nexport class VideoComponent implements OnInit {\n\n  recorderState = RecorderState;\n  identity = Identity;\n\n  /**\n   * 錄影按鈕是否 disabled\n   * - 任一方未上線\n   * - 有建立過錄影 recorder 且狀態為錄影中\n   */\n  get isRecordBtnDisabled(): boolean {\n    if (!this.webrtcLibService.onlineStatus.CT ||\n      !this.webrtcLibService.onlineStatus.CS ||\n      (this.recordService.recorderState && this.recordService.recorderState === this.recorderState.recording)) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 錄影按鈕是否 disabled\n   * - 任一方未上線\n   */\n  get isScreenshotBtnDisabled(): boolean {\n    if (!this.webrtcLibService.onlineStatus.CT ||\n      !this.webrtcLibService.onlineStatus.CS) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 是否顯示錄影中...提示字\n   */\n  get isShowRecordingMsg(): boolean {\n    if (this.recordService.recorderState &&\n      this.recordService.recorderState === this.recorderState.recording) {\n      return true;\n    }\n    return false;\n  }\n\n  /** 業務員待辦事項 */\n  checkList = [\n    {\n      title: '啟動錄影',\n      isChecked: false\n    },\n    {\n      title: '業務員自我介紹',\n      isChecked: false\n    },\n    {\n      title: '請客戶講出姓名',\n      isChecked: false\n    },\n    {\n      title: '請客戶出示身分證明證件於螢幕前，正反面各停留5秒鐘，並截圖',\n      isChecked: false\n    },\n    {\n      title: '請客戶簽署聲明書，簽名時須在鏡頭前露出',\n      isChecked: false\n    },\n    {\n      title: '簽名完成後，業務員點選送出並即時套印文件',\n      isChecked: false\n    },\n    {\n      title: '視訊簽署聲明同意的意願確認',\n      isChecked: false\n    }\n  ];\n\n  constructor(\n    public webrtcLibService: WebrtcLibService,\n    public recordService: RecordService,\n    private s3bucketService: S3bucketService,\n    private screenshotService: ScreenshotService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * 點選開始\n   */\n  onStartClick(): void {\n    this.webrtcLibService.startClick();\n  }\n\n  /**\n   * 點選掛斷\n   */\n  onStopClick(): void {\n    this.webrtcLibService.stopClick();\n\n    if (this.webrtcLibService.identity === Identity.Agent &&\n      this.recordService.recorderState !== RecorderState.inactive) {\n      this.recordService.stopRecorder();\n      this.uploadVideoToS3();\n    }\n  }\n\n  onRecordClick(): void {\n    this.recordService.startRecorder();\n  }\n\n  onScreenShotClick(): void {\n    const image = this.screenshotService.getShotImage();\n    this.s3bucketService.addFile(image, 'WebRTC', 'screenshot');\n  }\n\n  private uploadVideoToS3(): void {\n    this.recordService.getFileList().subscribe(list => {\n      console.log(list);\n      // 確實拿到 local/remote 兩個檔案後上傳\n      if (list && list.length === 2) {\n        list.forEach(file => {\n          if (file.name.includes('local')) {\n            this.s3bucketService.addFile(file, 'WebRTC', '');\n          } else if (file.name.includes('remote')) {\n            this.s3bucketService.addFile(file, 'WebRTC', 'remoteVideo');\n          }\n        });\n      }\n    });\n  }\n}\n","<div class=\"content-container\">\n    <!-- 視訊 -->\n    <section class=\"inner-container\">\n        <!-- 錄影中提示 -->\n        <div *ngIf=\"isShowRecordingMsg\" class=\"alert alert-danger recording-alert\" role=\"alert\">\n            <img src=\"./assets/images/icons/record.svg\" width=\"18\" alt=\"\">\n            Recording online meeting...\n        </div>\n\n        <div class=\"video-zone center\">\n            <!-- 尚未加入的畫面 -->\n            <ng-container *ngIf=\"!webrtcLibService.isStarted\">\n                <div class=\"circle center\">{{ webrtcLibService.identity!! | identity }}</div>\n            </ng-container>\n\n            <!-- 視訊畫面 -->\n            <ng-container *ngIf=\"webrtcLibService.isStarted\">\n                <lib-local-video class=\"local-video\"></lib-local-video>\n                <lib-remote-video class=\"remote-video\"></lib-remote-video>\n            </ng-container>\n\n        </div>\n    </section>\n    <!-- check list -->\n    <section *ngIf=\"webrtcLibService.isStarted && webrtcLibService.identity === identity.Agent\" class=\"check-list\">\n        <h4 class=\"text-center mb-3\">遠距投保待辦事項</h4>\n        <ul>\n            <li *ngFor=\"let item of checkList; let i = index;\">\n                <input type=\"checkbox\" [id]=\"'cbox_' + i\" [value]=\"item.isChecked\">\n                <label [for]=\"'cbox_' + i\">{{ item.title }}</label>\n            </li>\n        </ul>\n    </section>\n    <!-- 下方按鈕 -->\n    <div class=\"btn-group-position center\">\n        <button type=\"button\" class=\"btn btn-primary\" style=\"width: 8em;\" (click)=\"onStartClick()\"\n            *ngIf=\"!webrtcLibService.isStarted\">開始</button>\n\n        <ng-container *ngIf=\"webrtcLibService.isStarted\">\n            <a href=\"javascript:void(0)\" *ngIf=\"webrtcLibService.identity === identity.Agent\" class=\"circle-btn me-4\"\n                [class.disabled]=\"isRecordBtnDisabled\" (click)=\"onRecordClick()\">\n                <img src=\"./assets/images/icons/rec.svg\" *ngIf=\"!isRecordBtnDisabled\" width=\"24\" alt=\"\">\n                <img src=\"./assets/images/icons/rec_disabled.svg\" *ngIf=\"isRecordBtnDisabled\" width=\"24\" alt=\"\">\n                <span>錄影</span>\n            </a>\n            <a href=\"javascript:void(0)\" (click)=\"onStopClick()\">\n                <img src=\"./assets/images/icons/hangup.png\" width=\"60\" alt=\"\">\n            </a>\n            <a href=\"javascript:void(0)\" *ngIf=\"webrtcLibService.identity === identity.Agent\" class=\"circle-btn ms-4\"\n                [class.disabled]=\"isScreenshotBtnDisabled\" (click)=\"onScreenShotClick()\">\n                <img src=\"./assets/images/icons/screenshot.svg\" *ngIf=\"!isScreenshotBtnDisabled\" width=\"24\" alt=\"\">\n                <img src=\"./assets/images/icons/screenshot_disabled.svg\" *ngIf=\"isScreenshotBtnDisabled\" width=\"24\"\n                    alt=\"\">\n                <span>截圖</span>\n            </a>\n        </ng-container>\n    </div>\n    <!-- 截圖畫面提示 -->\n    <lib-screenshot-preview></lib-screenshot-preview>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VideoRoutingModule } from './video-routing.module';\nimport { VideoComponent } from './video.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { WebrtcLibModule } from 'projects/webrtc-lib/src/public-api';\n\n\n@NgModule({\n  declarations: [VideoComponent],\n  imports: [\n    CommonModule,\n    VideoRoutingModule,\n    WebrtcLibModule,\n    SharedModule\n  ]\n})\nexport class VideoModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VideoComponent } from './video.component';\n\nconst routes: Routes = [{ path: '', component: VideoComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VideoRoutingModule { }\n","import { Injectable } from '@angular/core';\ndeclare const AWS: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class S3bucketService {\n\n  private albumBucketName = 'mercue.angular.test';\n  private bucketRegion = 'ap-northeast-1';\n  private IdentityPoolId = 'ap-northeast-1:e19bfdc9-ee06-4f19-8cf8-64b20a090444';\n\n  private imgFile: File;\n\n  constructor() {\n    AWS.config.update({\n      region: this.bucketRegion,\n      credentials: new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: this.IdentityPoolId\n      })\n    });\n  }\n\n  addFile(file: File, folderName: string, type: string): void {\n    const isUploadRemote = type === 'remoteVideo';\n    const isUploadScreenshot = type === 'screenshot';\n\n    if (!isUploadScreenshot) {\n      // startLoading('影像檔上傳中...');\n    }\n\n    this.imgFile = file;\n    const fileName = file.name;\n    const albumPhotosKey = encodeURIComponent(folderName) + '/';\n\n    const photoKey = albumPhotosKey + fileName;\n\n    // Use S3 ManagedUpload class as it supports multipart uploads\n    const upload = new AWS.S3.ManagedUpload({\n      params: {\n        Bucket: this.albumBucketName,\n        Key: photoKey,\n        Body: file\n      }\n    });\n\n    const promise = upload.promise();\n\n    promise.then(\n      (data: any) => {\n        if (isUploadRemote) {\n          // closeLoading();\n        }\n\n        // showMsg('success', isUploadScreenshot ? '成功上傳截圖。' : `成功上傳${fileName}影音檔。`);\n      },\n      (err: any) => {\n        console.log(err);\n        // closeLoading();\n\n        // showMsg('alert', '上傳發生問題，將下載檔案至本地。');\n\n        // return alert('There was an error uploading your file: ', err.message);\n        const image = new Blob([this.imgFile], { 'type': 'image/jpeg' });\n        const url = URL.createObjectURL(image);\n        const downloadLink = document.createElement('a');\n        downloadLink.href = url; // url\n        downloadLink.download = fileName; // 檔名\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n      }\n    );\n  }\n}\n","export enum RecorderState {\n    /** 錄影中 */\n    recording = 'recording',\n    /** 停止 */\n    inactive = 'inactive',\n    /** 暫停 */\n    paused = 'paused'\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Identity } from 'projects/webrtc-lib/src/public-api';\n\n@Pipe({\n  name: 'identity'\n})\nexport class IdentityPipe implements PipeTransform {\n\n  transform(value: Identity): string {\n    switch (value) {\n      case Identity.Agent:\n        return '客服人員';\n      case Identity.Customer:\n        return '客戶';\n      default:\n        return '';\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IdentityPipe } from './pipes/identity.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    IdentityPipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    IdentityPipe\n  ]\n})\nexport class SharedModule { }\n"],"sourceRoot":"webpack:///"}